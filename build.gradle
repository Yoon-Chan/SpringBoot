//buildscript코드는 이 프로젝트의 플러그인 의존성 관리를 위한 설정.
buildscript {
    //build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
    ext{
        //springBootVersion 전역변수를 생성하고 값을 2.1.7.RELEASE로 하겠다는 의미.
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

    }

}
//apply는 의존성들을 적용할 것인지를 결정하는 코드
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//스프링 부트의 의존성들을 관리해주는 플러그인이라 꼭 추가.
apply plugin: 'io.spring.dependency-management'



group 'com.chan.book'
version '1.0-SNAPSHOT'

//각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 정한다.
repositories {
    mavenCentral()
}

dependencies {
    //Junit
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.1") {
        exclude module:'junit-platform-commons'
    }
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.1")
    testRuntimeOnly("org.junit.platform:junit-platform-engine:1.5.1")
    testRuntimeOnly("org.junit.platform:junit-platform-commons:1.5.1")

    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    //implementation('org.projectlombok:lombok') gradle 5.x미만일 때 사용가능. 5.x이상인 경우 아래와 같이 사용.
    compileOnly('org.projectlombok:lombok:')
    annotationProcessor('org.projectlombok:lombok:')

    //Spring Data Jpa 적용하기
    //1번째 줄 : 스프링 부트용 Spring Data Jpa 추상화 라이브러리. 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전을 관리
    //2번째 줄 : 인메모리 관계형 데이터베이스. 별도설치 필요없이 프로젝트 의존성만으로 관리할 수 있다.
    //
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현시 필요한 의존성입니다.
    //spring-security-oauth2-client와 spring-security-oauth2-jose를 기본으로 관리해줍니다
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.session:spring-session-jdbc')
    testImplementation('org.springframework.security:spring-security-test')


}

test {
    useJUnitPlatform()
}